<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.openkitchen.teacherRegist">
	<update id="insertDTO" parameterType="trdto">
		MERGE INTO TEACHER T
		USING DUAL
		ON (T.T_NO = ${tNo})

		WHEN MATCHED THEN
		UPDATE SET
		
		T_MAINSUMNAIL=#{tMainsumnail , jdbcType=VARCHAR},
		T_DETAILSUMNAIL=#{tDetailsumnail , jdbcType=VARCHAR},
		T_HAVENICKNAME=#{tHavenickname , jdbcType=VARCHAR},
		T_EXPERTNAME=#{tExpertname , jdbcType=VARCHAR},
		T_CAREER=#{tCareer ,jdbcType=CLOB},
		T_SHORTINTRO=#{tshortIntro , jdbcType=VARCHAR},
		T_AREA=#{tArea , jdbcType=VARCHAR},
		T_LONGINTRO=#{tLongintro ,jdbcType=CLOB},
		T_REGDATE=TO_DATE(SYSDATE,'YY/MM/DD'),
		T_EXPERT=#{tExpert , jdbcType=VARCHAR},
        T_PERSTATUS = #{tPerstatus,jdbcType=VARCHAR}
		
		WHEN NOT MATCHED THEN

		INSERT(
		T_NO,
		T_PERSTATUS,
		T_MAINSUMNAIL,
		T_DETAILSUMNAIL,
		T_HAVENICKNAME,
		T_EXPERTNAME,
		T_CAREER,
		T_SHORTINTRO,
		T_AREA,
		T_LONGINTRO,
		T_REGDATE,
		T_EXPERT
		)
		VALUES(
		#{tNo,jdbcType=NUMERIC},
		#{tPerstatus,jdbcType=VARCHAR},
		#{tMainsumnail , jdbcType=VARCHAR},
		#{tDetailsumnail ,jdbcType=VARCHAR},
		#{tHavenickname , jdbcType=VARCHAR},
		#{tExpertname ,jdbcType=VARCHAR},
		#{tCareer , jdbcType=CLOB},
		#{tshortIntro ,jdbcType=VARCHAR},
		#{tArea , jdbcType=VARCHAR},
		#{tLongintro ,jdbcType=CLOB},TO_DATE(SYSDATE,'YY/MM/DD'),
		#{tExpert ,jdbcType=VARCHAR}
		)
	</update>
	
	<update id="insertDtoP" parameterType="trdto">
	   <selectKey keyProperty="proNo" resultType="int" order="BEFORE">
	      SELECT PROVIDER_SEQ1.NEXTVAL FROM DUAL
	   </selectKey>
		MERGE INTO PROVIDER P
		USING DUAL 
		ON (P.M_NO = ${mNo})
                                     
		WHEN MATCHED THEN
		
		UPDATE SET
		
		PRO_TYPE=#{proType , jdbcType=NUMERIC},
		PRO_CEO=#{proCeo , jdbcType=VARCHAR},
		PRO_BANK=#{proBank , jdbcType=VARCHAR},
		PRO_ACCOUNT=#{proAccount , jdbcType=VARCHAR},
		PRO_NAME=#{proName ,jdbcType=NUMERIC},
		PRO_ACCOUNTING=#{proAccounting , jdbcType=VARCHAR},
		PRO_REGIMG=#{proRegimg , jdbcType=VARCHAR}
		
		
		

		WHEN NOT MATCHED THEN

		INSERT(
		PRO_NO,
		PRO_TYPE,
		PRO_CEO,
		PRO_BANK,
		PRO_ACCOUNT,
		PRO_NAME,
		PRO_ACCOUNTING,
		PRO_REGIMG,
		M_NO
		)
		
		VALUES(
		#{proNo,jdbcType=NUMERIC},
		#{proType , jdbcType=NUMERIC},
		#{proCeo , jdbcType=VARCHAR},
		#{proBank , jdbcType=VARCHAR},
		#{proAccount , jdbcType=VARCHAR},
		#{proName ,jdbcType=NUMERIC},
		#{proAccounting , jdbcType=VARCHAR},
		#{proRegimg , jdbcType=VARCHAR},
		#{mNo ,jdbcType=NUMERIC}
		)
	</update>
	
	<update id="insertDtoH" parameterType="trsdto">

		MERGE INTO HOST H
		USING (
		  SELECT M_GENDER
		  FROM MEMBERINFO 
		  WHERE M_NO= #{hNo}
		) M
		ON (H.H_NO = ${hNo})
                                     
		WHEN MATCHED THEN
		
		UPDATE SET
		
		H.H_GENDER=M.M_GENDER
		
	
		WHEN NOT MATCHED THEN

		INSERT(
		H_NO,
		H_GENDER
		)
		
		VALUES(
		#{hNo},M.M_GENDER
        )
	</update>
	
    <update id="insertDtoS" parameterType="trsdto">
      <selectKey keyProperty="sNo" resultType="int" order="BEFORE">
	      SELECT SPACE_SEQ.NEXTVAL FROM DUAL
	   </selectKey>
		MERGE INTO SPACE S
		USING ( SELECT M_NAME
		         FROM MEMBERINFO 
		         WHERE M_NO= #{hNo}) M
		ON (S.H_NO = ${hNo})

		WHEN MATCHED THEN
		UPDATE SET
		S_PERSTATUS=#{sPerstatus,jdbcType=VARCHAR},
		S_MAINSUMNAIL=#{sMainsumnail , jdbcType=VARCHAR},
		S_DETAILSUMNAIL=#{sDetailsumnail , jdbcType=VARCHAR},
		S_HASHTAG=#{sHashtag , jdbcType=VARCHAR},
		S_CONVENIENT=#{sConvenient ,jdbcType=VARCHAR},
		S_SAFETY=#{sSafety , jdbcType=VARCHAR},
		S_LOC=#{sLoc , jdbcType=VARCHAR},
		S_LONGINTRO=#{sLongintro ,jdbcType=CLOB},
		S_REGDATE=TO_DATE(SYSDATE,'YY/MM/DD'),
		S_REFERENCE=#{sReference , jdbcType=CLOB},
		S_SHORTINTRO=#{sShortintro,jdbcType=VARCHAR},
		S_NAME=M.M_NAME,
		S_CAPACITY=#{sCapacity, jdbcType=NUMERIC},
		S_TEMA=#{sTema ,jdbcType=VARCHAR}
	
		WHEN NOT MATCHED THEN
		INSERT (
		
		S_PERSTATUS, 
		S_TYPE,
		S_MAINSUMNAIL,
		S_DETAILSUMNAIL,
		S_HASHTAG,
		S_CONVENIENT,
		S_SAFETY,
		S_LOC,
		S_LONGINTRO,
		S_REGDATE,
		S_REFERENCE,
		S_SHORTINTRO,
		S_CAPACITY,
		S_TEMA,
		S_NO,
		S_NAME,
		H_NO
		)
		
		VALUES(
		#{sPerstatus,jdbcType=VARCHAR},
		'자가',
		#{sMainsumnail , jdbcType=VARCHAR},
		#{sDetailsumnail , jdbcType=VARCHAR},
		#{sHashtag , jdbcType=VARCHAR},
		#{sConvenient ,jdbcType=VARCHAR},
		#{sSafety , jdbcType=VARCHAR},
		#{sLoc , jdbcType=VARCHAR},
		#{sLongintro ,jdbcType=CLOB},
		TO_DATE(SYSDATE,'YY/MM/DD'),
		#{sReference , jdbcType=CLOB},
		#{sShortintro,jdbcType=VARCHAR},
		#{sCapacity, jdbcType=NUMERIC},
		#{sTema ,jdbcType=VARCHAR},
		#{sNo, jdbcType=NUMERIC},
		M.M_NAME,
		#{hNo,jdbcType=NUMERIC}
		)
	</update>
	
</mapper>